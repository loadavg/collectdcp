<?xml version="1.0" encoding="UTF-8"?>

<interface>
  <requires lib="gtk+" version="3.8"/>
  <object class="GtkLabel" id="label_rrdcached">
    <property name="visible">True</property>
    <property name="can_focus">False</property>
    <property name="label">Plugin rrdcached


The rrdcached plugin uses the RRDtool accelerator daemon, rrdcached(1),
to store values to RRD files in an efficient manner. The combination of the
rrdcached plugin and the rrdcached daemon is very similar to the
way the rrdtool plugin works (see below). The added abstraction layer
provides a number of benefits, though: Because the cache is not within
collectd anymore, it does not need to be flushed when collectd is to be
restarted. This results in much shorter (if any) gaps in graphs, especially
under heavy load. Also, the rrdtool command line utility is aware of the
daemon so that it can flush values to disk automatically when needed. This
allows to integrate automated flushing of values into graphing solutions much
more easily.


There are disadvantages, though: The daemon may reside on a different host, so
it may not be possible for collectd to create the appropriate RRD files
anymore. And even if rrdcached runs on the same host, it may run in a
different base directory, so relative paths may do weird stuff if you're not
careful.


So the recommended configuration is to let collectd and rrdcached run
on the same host, communicating via a UNIX domain socket. The DataDir
setting should be set to an absolute path, so that a changed base directory
does not result in RRD files being createdÂ / expected in the wrong place.

</property>
  </object>
  <object class="GtkGrid" id="rrdcached">
    <property name="name">rrdcached</property>
    <property name="visible">True</property>
    <property name="can_focus">False</property>
    <child>
      <object class="GtkLabel" id="label-DaemonAddress">
	<property name="visible">True</property>
	<property name="can_focus">False</property>
	<property name="label" translatable="yes">DaemonAddress</property>
      </object>
      <packing>
	<property name="left_attach">0</property>
	<property name="top_attach">0</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkEntry" id="DaemonAddress">
	<property name="name">DaemonAddress</property>
	<property name="visible">True</property>
	<property name="can_focus">True</property>
	<property name="tooltip_text" translatable="yes">
Address of the daemon as understood by the rrdc_connect function of the RRD
library. See rrdcached(1) for details. Example:

  &lt;Plugin "rrdcached"&gt;
    DaemonAddress "unix:/var/run/rrdcached.sock"
  &lt;/Plugin&gt;
</property>
	<property name="placeholder_text" translatable="yes">Address</property>
      </object>
      <packing>
	<property name="left_attach">1</property>
	<property name="top_attach">0</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkLabel" id="label-DataDir">
	<property name="visible">True</property>
	<property name="can_focus">False</property>
	<property name="label" translatable="yes">DataDir</property>
      </object>
      <packing>
	<property name="left_attach">0</property>
	<property name="top_attach">1</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkEntry" id="DataDir">
	<property name="name">DataDir</property>
	<property name="visible">True</property>
	<property name="can_focus">True</property>
	<property name="tooltip_text" translatable="yes">
Set the base directory in which the RRD files reside. If this is a relative
path, it is relative to the working base directory of the rrdcached daemon!
Use of an absolute path is recommended.
</property>
	<property name="placeholder_text" translatable="yes">Directory</property>
      </object>
      <packing>
	<property name="left_attach">1</property>
	<property name="top_attach">1</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkLabel" id="label-CreateFiles">
	<property name="visible">True</property>
	<property name="can_focus">False</property>
	<property name="label" translatable="yes">CreateFiles</property>
      </object>
      <packing>
	<property name="left_attach">0</property>
	<property name="top_attach">2</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkCheckButton" id="CreateFiles">
	<property name="name">CreateFiles</property>
	<property name="visible">True</property>
	<property name="can_focus">True</property>
	<property name="tooltip_text" translatable="yes">
Enables or disables the creation of RRD files. If the daemon is not running
locally, or DataDir is set to a relative path, this will not work as
expected. Default is true.
</property>
      </object>
      <packing>
	<property name="left_attach">1</property>
	<property name="top_attach">2</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkLabel" id="label-CreateFilesAsync">
	<property name="visible">True</property>
	<property name="can_focus">False</property>
	<property name="label" translatable="yes">CreateFilesAsync</property>
      </object>
      <packing>
	<property name="left_attach">0</property>
	<property name="top_attach">3</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkCheckButton" id="CreateFilesAsync">
	<property name="name">CreateFilesAsync</property>
	<property name="visible">True</property>
	<property name="can_focus">True</property>
	<property name="tooltip_text" translatable="yes">
When enabled, new RRD files are enabled asynchronously, using a separate thread
that runs in the background. This prevents writes to block, which is a problem
especially when many hundreds of files need to be created at once. However,
since the purpose of creating the files asynchronously is not to block until
the file is available, values before the file is available will be discarded.
When disabled (the default) files are created synchronously, blocking for a
short while, while the file is being written.
</property>
      </object>
      <packing>
	<property name="left_attach">1</property>
	<property name="top_attach">3</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkLabel" id="label-StepSize">
	<property name="visible">True</property>
	<property name="can_focus">False</property>
	<property name="label" translatable="yes">StepSize</property>
      </object>
      <packing>
	<property name="left_attach">0</property>
	<property name="top_attach">4</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkEntry" id="StepSize">
	<property name="name">StepSize</property>
	<property name="visible">True</property>
	<property name="can_focus">True</property>
	<property name="tooltip_text" translatable="yes">
Force the stepsize of newly created RRD-files. Ideally (and per default)
this setting is unset and the stepsize is set to the interval in which the data
is collected. Do not use this option unless you absolutely have to for some
reason. Setting this option may cause problems with the snmp plugin, the
exec plugin or when the daemon is set up to receive data from other hosts.
</property>
	<property name="placeholder_text" translatable="yes">Seconds</property>
      </object>
      <packing>
	<property name="left_attach">1</property>
	<property name="top_attach">4</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkLabel" id="label-HeartBeat">
	<property name="visible">True</property>
	<property name="can_focus">False</property>
	<property name="label" translatable="yes">HeartBeat</property>
      </object>
      <packing>
	<property name="left_attach">0</property>
	<property name="top_attach">5</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkEntry" id="HeartBeat">
	<property name="name">HeartBeat</property>
	<property name="visible">True</property>
	<property name="can_focus">True</property>
	<property name="tooltip_text" translatable="yes">
Force the heartbeat of newly created RRD-files. This setting should be unset
in which case the heartbeat is set to twice the StepSize which should equal
the interval in which data is collected. Do not set this option unless you have
a very good reason to do so.
</property>
	<property name="placeholder_text" translatable="yes">Seconds</property>
      </object>
      <packing>
	<property name="left_attach">1</property>
	<property name="top_attach">5</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkLabel" id="label-RRARows">
	<property name="visible">True</property>
	<property name="can_focus">False</property>
	<property name="label" translatable="yes">RRARows</property>
      </object>
      <packing>
	<property name="left_attach">0</property>
	<property name="top_attach">6</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkEntry" id="RRARows">
	<property name="name">RRARows</property>
	<property name="visible">True</property>
	<property name="can_focus">True</property>
	<property name="tooltip_text" translatable="yes">
The rrdtool plugin calculates the number of PDPs per CDP based on the
StepSize, this setting and a timespan. This plugin creates RRD-files with
three times five RRAs, i. e. five RRAs with the CFs MIN, AVERAGE, and
MAX. The five RRAs are optimized for graphs covering one hour, one day, one
week, one month, and one year.
So for each timespan, it calculates how many PDPs need to be consolidated into
one CDP by calculating:
  number of PDPs = timespan / (stepsize * rrarows)
Bottom line is, set this no smaller than the width of you graphs in pixels. The
default is 1200.
</property>
	<property name="placeholder_text" translatable="yes">NumRows</property>
      </object>
      <packing>
	<property name="left_attach">1</property>
	<property name="top_attach">6</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkLabel" id="label-RRATimespan">
	<property name="visible">True</property>
	<property name="can_focus">False</property>
	<property name="label" translatable="yes">RRATimespan</property>
      </object>
      <packing>
	<property name="left_attach">0</property>
	<property name="top_attach">7</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkEntry" id="RRATimespan">
	<property name="name">RRATimespan</property>
	<property name="visible">True</property>
	<property name="can_focus">True</property>
	<property name="tooltip_text" translatable="yes">
Adds an RRA-timespan, given in seconds. Use this option multiple times to have
more then one RRA. If this option is never used, the built-in default of (3600,
86400, 604800, 2678400, 31622400) is used.
For more information on how RRA-sizes are calculated see RRARows above.
</property>
	<property name="placeholder_text" translatable="yes">Seconds</property>
      </object>
      <packing>
	<property name="left_attach">1</property>
	<property name="top_attach">7</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkLabel" id="label-XFF">
	<property name="visible">True</property>
	<property name="can_focus">False</property>
	<property name="label" translatable="yes">XFF</property>
      </object>
      <packing>
	<property name="left_attach">0</property>
	<property name="top_attach">8</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkEntry" id="XFF">
	<property name="name">XFF</property>
	<property name="visible">True</property>
	<property name="can_focus">True</property>
	<property name="tooltip_text" translatable="yes">
Set the "XFiles Factor". The default is 0.1. If unsure, don't set this option.
Factor must be in the range [0.0-1.0), i.e. between zero (inclusive) and
one (exclusive).
</property>
	<property name="placeholder_text" translatable="yes">Factor</property>
      </object>
      <packing>
	<property name="left_attach">1</property>
	<property name="top_attach">8</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkLabel" id="label-CollectStatistics">
	<property name="visible">True</property>
	<property name="can_focus">False</property>
	<property name="label" translatable="yes">CollectStatistics</property>
      </object>
      <packing>
	<property name="left_attach">0</property>
	<property name="top_attach">9</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
    <child>
      <object class="GtkCheckButton" id="CollectStatistics">
	<property name="name">CollectStatistics</property>
	<property name="visible">True</property>
	<property name="can_focus">True</property>
	<property name="tooltip_text" translatable="yes">
When set to true, various statistics about the rrdcached daemon will be
collected, with "rrdcached" as the plugin name. Defaults to false.
Statistics are read via rrdcacheds socket using the STATS command.
See rrdcached(1) for details.
</property>
      </object>
      <packing>
	<property name="left_attach">1</property>
	<property name="top_attach">9</property>
	<property name="width">1</property>
	<property name="height">1</property>
      </packing>
    </child>
  </object>
</interface>